Semua return, dibungkus dalam 
AjaxResponseModel -> {title: string, code: string, message: string, data Object}


--LOGIN -- DONE
--a. auth -> kirim {nip: string, pass: string}
--	-> get {nip: string, token: string, role: string, dataUser: DataUser -> itu isi semua data dalam tabel pegawai}

--REGISTER -- DONE
--a. cekNip
--	-> kirim {nip: string}
--	-> get {user: string}, kalau tidak ada nip nya, maka balikin status code 0, dan message tidak ditemukan
--b. register
--	-> kirim{nip: string, pass: string}
--	-> get {message: berhasil}
-- BALIKAN CRM --

SAVE PEMINJAMAN -- DONE
--a. get daftar barang yang bisa dipinjam
--1. join tabel bmn + status barang
--2. query where, status barang = 1(tersedia) dan kondisi = 0(baik)
-h- api value = "barang/get" --

-- b. save + edit -- DONE
-- 1. siapin model buat tampungan save
-- 2. data yang dikirim = {idBarang: BigDecimal, namaPeminjam: string, nip: string, keperluan: string, tanggalpinjam: date, tanggaljatuhtempo: date}
-- 3. set status peminjaman = 0(menunggu konfirmasi)
-h- api value = "/pinjam/save" --
-h- api value = "pinjam/get/{id}" --
-h- api value = "/pinjam/edit" --

--c. daftar konfirmasi -- DONE
--1. query = tabel peminjaman query by nip, where status peminjaman = 0;
-- api value = "pinjam/get/daftarkonfirmasi/{nip}" --
-- REVISI
-- 1. selain id barang, tambahkan juga data dari tabel bmn => { jenisBarang(query dari tabel kode_barang), namaBarang, MerkBarang, Keterangan, Kondisi(dari tabel status barang) }
-- 2.sortir data by created date, descending.

-- d. hapus case peminjaman --DONE
-- 1. data = idpeminjaman => hapus
-h- api POST value = "/pinjam/delete" - @RequestParam idPeminjaman: BigDecimal
-L- api sudah dihganti menjadi DELETE value="/pinjam/delete/{id}" menggunakan path variable

-- e. edit -- DONE
-- 1. data = idpeminjaman => get data peminjaman by id
-- 2. return data yang akan diedit.
-h- lihat line 29-28
REVISI
-L- data yang diambil, tambahkan juga data dari tabel bmn => { jenisBarang(query dari tabel kode_barang), namaBarang, MerkBarang, Keterangan, Kondisi(dari tabel status barang) }

PERSETUJUAN
-- query daftar persetujuan -- DONE
-- 1.query ke tabel persetujuan join ke tabel bmn dan kode barang where status_peminjaman = 0 (menunggu konfirmasi)
-h- api value = "approval/get"

-- query count persetujuan -- DONE
-- 1.query ke tabel persetujuan join ke tabel bmn dan kode barang where status_peminjaman = 0 (menunggu konfirmasi) => cari countnya berapa
-h- api value = "approval/get" ==> balikan CommonResponseModel telah dimodifikasi dan ditambahkan 'totalData'
-h- CommonResponseModel -> {title: string, code: string, message: string, data: Object, totalData: Long}

-- a. setuju -- DONE
-- 1. data: idpeminjaman=> cek? status barangnya, statusnya = 0(tdk tersedia)? => message: sudah dipinjam oleh orang lain.
--	berhasil? status peminjaman di tabel peminjaman = 1(disetujui), status barang di tabel status barang = 0(tdk tersedia)
-h- api POST value = "approval/setuju" - @RequestBody PersetujuanInputModel
-h- PersetujuanInputModel {idPeminjaman: BigDecimal, alasanPenolakan: String}

-- b. tolak -- DONE
-- 1. data: {idPeminjaman, alasanPenolakan}, set status peminjaman = 2(ditolak), insert alasan penolakan.
-h- api POST value = "approval/tolak" - @RequestBody PersetujuanInputModel
-h- PersetujuanInputModel {idPeminjaman: BigDecimal, alasanPenolakan: String}

-- REKAM PENGEMBALIAN -- DONE
-- query daftar persetujuan
-- 1.query ke tabel persetujuan join ke tabel bmn dan kode barang where status_peminjaman = 1 (disetujui tapi belum dikembalikan)
-h- api value = "return/get"

-- a. rekam -- DONE
-- 1. data = {idpeminjaman, tanggalKembali, kondisi }, idpeminjaman, tanggalKembali => set di tabel peminjaman
--   dan set status_peminjaman = 3 (selesai),
--   ditabel kondisi => set status barang = 1 dan kondisi sesuai dengan inputan admin
-h- api POST value = "return/get" @RequestBody PengembalianInputModel
-h- PengembalianInputModel {idPeminjaman: BigDecimal, tanggalKembali: Date, kondisi: String}

MONITORING

-- 1.Barang yang sedang dipinjam.
-- a. untuk admin -> bisa menggunakan query daftar pengembalian barang.
-h- api value = "monitoring/pinjam/get"
-- b. untuk user -> query mirip dengan query daftar pengembalian barang, ditambahkan parameter NIP.
-h- api value = "monitoring/pinjam/get/{nip}"

-- 2. histori peminjaman barang
-- a. get list semua peminjaman barang parameter by NIP, diurutkan by dari tanggal "jatuh tempo pengembalian" terakhir.
-h- api value = "monitoring/pinjam/history/get/{nip}"

-- 3. monitoring. 
-- a. get list daftar barang by jenis barang.
-h- api value = "monitoring/barang/get/{kdBarang}" --- kdBarang: String

b. get informasi barang
--    1. informasi barang (bisa diambil dari tabel bmn, kode barang, dan status diambil dari tabel peminjaman barang)
    2. histori peminjaman, get daftar histori barang tersebut pernah dipinjam oleh siapa saja. termasuk didalamnya nama peminjaman, keperluan, tanggal pinjam, JT, dan pengembalian
